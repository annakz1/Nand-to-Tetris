// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

	static int keyboard_address;

    /** Initializes the keyboard. */
    function void init() {
		let keyboard_address = 24576;
		return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		var int currChar;
		
		let currChar = Memory.peek(keyboard_address);
		if (~(currChar = 0)){
			return currChar;
		}else{
			return 0;
		}
    }
	

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
		var char c;
		
		// waits until a key is pressed
		while (Keyboard.keyPressed() = 0){
			// do nothing
		}
		
		let c = Keyboard.keyPressed();
		
		// waits until the key is released
		while (~(Keyboard.keyPressed() = 0)){
			// do nothing
		}
		
		do Output.printChar(c);
		
		return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
		var String str;
		var char c;
		
		let str = String.new(50);
		
		do Output.printString(message);
		
		while(true){
			let c = Keyboard.readChar();
			
			if(c = String.newLine()){
				return str;
			}else{
				if(c = String.backSpace()){
					do str.eraseLastChar();
				}else{
					if((c > 31) & (c < 127)){ // if c is printable char
						do str.appendChar(c);
					}
				}
			}
		}
		
		return str;
		
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
		var String str;
		var char c;
		var int res;
		
		let str = String.new(50);
		
		do Output.printString(message);
		
		while(true){
			let c = Keyboard.readChar();
			
			if(c = String.newLine()){
				let res = str.intValue();
				return res;
			}else{
				if(c = String.backSpace()){
					do str.eraseLastChar();
				}else{
					if((c > 31) & (c < 127)){ // if c is printable char
						do str.appendChar(c);
					}
				}
			}
		}
		let res = str.intValue();
		return res;
    }
}
