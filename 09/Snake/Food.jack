/** Implements a graphical snake's food. */
class Food {
	field int x, y; // screen location of the food's top-left corner
	field int xF, yF; // screen location of the food's down-right corner
	field int size; // length of this snake, in pixels

	/** Constructs a new food with a given location and size. */
	constructor Food new(int Asize) {
		let x = getRandomX(6);
		let y = getRandomY(6);
		let size = Asize;
		let xF = x + size;
		let yF = y + size;
		do draw();
		return this;
	}

	/** Accessors. */
    method int getX() { return x; }
    method int getY() { return y; }
    method int getXF() { return xF; }
    method int getYF() { return yF; }

	/** Disposes this food. */
	method void dispose() {
		do Memory.deAlloc(this);
		return;
	}

	/** Draws the food on the screen. */
	method void draw() {
		do Screen.setColor(true);
		do Screen.drawRectangle(x, y, xF, yF);
		return;
	}

	/** Erases the food from the screen. */
	method void erase() {
		do Screen.setColor(false);
		do Screen.drawRectangle(x, y, xF, yF);
		return;
	}

	method void drawInRandomLocation(int Adirection) {
		let x = getRandomX(Adirection);
		let y = getRandomY(Adirection);
		let xF = x + size;
		let yF = y + size;
		do draw();
		return;
	}

	method int getRandomX(int Adirection){
		var int res;
		let res = x + (Adirection * Adirection * 3);
		if ( (res + size) < 510 ){
			return res;
		}else{
			let res = x - (Adirection * Adirection * 3);
			if(x > 1){
				return res;
			}else{
				return Adirection * Adirection * 3;
			}	
		}
	}

	method int getRandomY(int Adirection){
		var int res;
		let res = y + (Adirection * Adirection * 3);
		if ( (res + size) < 254 ){
			return res;
		}else{
			let res = y - (Adirection * Adirection * 3);
			if(y > 1){
				return res;
			}else{
				return Adirection * Adirection * 3;
			}	
		}
	}
}